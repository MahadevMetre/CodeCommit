<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.authorizeproject.AuthorizeProjectProperty plugin="authorize-project@1.7.1">
      <strategy class="org.jenkinsci.plugins.authorizeproject.strategy.TriggeringUsersAuthorizationStrategy"/>
    </org.jenkinsci.plugins.authorizeproject.AuthorizeProjectProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>3</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.promoted__builds.JobPropertyImpl plugin="promoted-builds@945.v597f5c6a_d3fd">
      <activeProcessNames>
        <string>qa</string>
        <string>dev</string>
        <string>staging</string>
      </activeProcessNames>
    </hudson.plugins.promoted__builds.JobPropertyImpl>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@332.va_1ee476d8f6d">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.8"/>
  </properties>
  <scm class="hudson.scm.SubversionSCM" plugin="subversion@1256.vee91953217b_6">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>https://svn.franklinmadisonds.com/svn/insurance/ui/insuranceapps/hermes_serverless/branches/print_sprint-2</remote>
        <credentialsId>fa1eeeb6-8ea8-4b36-81c9-5f88ef8ef815</credentialsId>
        <local>.</local>
        <depthOption>infinity</depthOption>
        <ignoreExternalsOption>true</ignoreExternalsOption>
        <cancelProcessOnExternalsFail>true</cancelProcessOnExternalsFail>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
    <workspaceUpdater class="hudson.scm.subversion.UpdateWithCleanUpdater"/>
    <ignoreDirPropChanges>false</ignoreDirPropChanges>
    <filterChangelog>false</filterChangelog>
    <quietOperation>true</quietOperation>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set +x

sonar_prop_file=sonar-project.properties

if [ ! -f &quot;$sonar_prop_file&quot; ]; then
	echo $sonar_prop_file file not found
	exit 1
fi

lcov_path=`grep &apos;sonar.javascript.lcov.reportPaths=&apos; $sonar_prop_file | cut -d&apos;=&apos; -f2`

grep -q &apos;&quot;sonar-test&quot;&apos; package.json
if [ $? -ne 0 ]; then
	echo sonar-test script not found in package.json
	exit 1
fi

source ~/.nvm/nvm.sh
nvm use v18.19.1
npm install --legacy-peer-deps
npm run sonar-test

if [ ! -f &quot;$lcov_path&quot; ]; then
	echo $lcov_path file not found
	exit 1
fi

sonar-scanner -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_AUTH_TOKEN
ng build
nvm use system
mkdir -p $BACKUP_PATH_BUILD/
cp -a $WORKSPACE/dist/hermes/. $BACKUP_PATH_BUILD/
rm -rf $WORKSPACE/
cd /opt/scripts/
./aws_s3_put_object.sh</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.26"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.4">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>